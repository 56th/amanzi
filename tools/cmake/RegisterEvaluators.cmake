#
# This bit of code exists to autogenerate an include file
# that contains the registration of evaluator factories.
#
# The autogenerated include file is only to be included in 
# the file that contains main, and not in any file that is 
# to be included in a library.
#
# How to use this...
#
# Use the function
#
# register_evaluator_with_factory(bla_reg.hh REGISTER_FILE_LIST)
#
# to add the file bla_reg.hh to the list of files that is going
# to be used to autogenerate an include file that is a concatenation
# of all the _reg.hh files. This is where all specific evaluators 
# are registered with the factory. This concatentated include file
# is created by calling the function
#
# register_evaluators(eval_reg.hh REGISTER_FILE_LIST)
#
# It should be called in the CMakeLists.txt in the directory
# that contains the .cc file containing the main function. It auto-
# generates the file eval_reg.hh, which must be included in the
# .cc file that contains main.
#
# The result of this is that we are now sure that the code that is
# needed to register all individual evaluators with the factory is 
# in fact linked with the executable.
#



function(amanzi_file_cat IN_FILE OUT_FILE)
  file(READ ${IN_FILE} CONTENTS)
  file(APPEND ${OUT_FILE} "${CONTENTS}")
endfunction()


function(generate_evaluators_registration_header EVALUATOR_REG_FILE_NAME EVALUATOR_REG_LIST_NAME)

  # Prepare a temporary file to "cat" to:
  file(WRITE ${EVALUATOR_REG_FILE_NAME}.in "")

  get_property(VAR_FACTORY_REG_HEADERS GLOBAL PROPERTY EVALUATOR_REG_LIST_NAME)

  # Call the "cat" function for each input file
  foreach(HEADER ${VAR_FACTORY_REG_HEADERS})
    amanzi_file_cat(${HEADER} ${EVALUATOR_REG_FILE_NAME}.in)
  endforeach()

  # Copy the temporary file to the final location
  configure_file(${EVALUATOR_REG_FILE_NAME}.in ${CMAKE_CURRENT_SOURCE_DIR}/${EVALUATOR_REG_FILE_NAME} COPYONLY)
  
  install(FILES ${EVALUATOR_REG_FILE_NAME}  DESTINATION ${CMAKE_INSTALL_PREFIX}/include)

endfunction()

function(register_evaluator_with_factory EVALUATOR_STUB_NAME EVALUATOR_REG_LIST_NAME)
  get_property(VAR_TMP GLOBAL PROPERTY EVALUATOR_REG_LIST_NAME)
  set(VAR_TMP ${VAR_TMP} ${CMAKE_CURRENT_SOURCE_DIR}/${EVALUATOR_STUB_NAME})
  set_property(GLOBAL PROPERTY EVALUATOR_REG_LIST_NAME ${VAR_TMP})
endfunction()