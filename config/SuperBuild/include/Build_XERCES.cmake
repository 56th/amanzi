#  -*- mode: cmake -*-
#
# Build TPL: XERCES 
#  

# --- Define all the directories and common external project flags
define_external_project_args(XERCES 
                             TARGET xerces)

# add version version to the autogenerated tpl_versions.h file
amanzi_tpl_version_write(FILENAME ${TPL_VERSIONS_INCLUDE_FILE}
  PREFIX XERCES
  VERSION ${XERCES_VERSION_MAJOR} ${XERCES_VERSION_MINOR} ${XERCES_VERSION_PATCH})

# -- Set Xerces configuration options
set(XERCES_CMAKE_ARGS "-DBUILD_SHARED_LIBS=${BUILD_SHARED_LIBS}")
list(APPEND XERCES_CMAKE_ARGS "-DCMAKE_INSTALL_BINDIR:PATH=${TPL_INSTALL_PREFIX}/bin")
list(APPEND XERCES_CMAKE_ARGS "-DCMAKE_INSTALL_LIBDIR:PATH=${TPL_INSTALL_PREFIX}/lib")
list(APPEND XERCES_CMAKE_ARGS "-DCMAKE_INSTALL_DOCDIR:PATH=${TPL_INSTALL_PREFIX}/doc/xerces")
list(APPEND XERCES_CMAKE_ARGS "-DCMAKE_INSTALL_INCLUDEDIR:PATH=${TPL_INSTALL_PREFIX}/include")
list(APPEND XERCES_CMAKE_ARGS "-Dnetwork:BOOL=FALSE")
# Force OSX to use its CoreServices Framework
if (APPLE)
  list(APPEND XERCES_CMAKE_ARGS "-DCMAKE_HOST_APPLE:BOOL=TRUE")
endif()

# --- Add external project build and tie to the ZLIB build target
ExternalProject_Add(${XERCES_BUILD_TARGET}
                    DEPENDS   ${XERCES_PACKAGE_DEPENDS}        # Package dependency target
                    TMP_DIR   ${XERCES_tmp_dir}                # Temporary files directory
                    STAMP_DIR ${XERCES_stamp_dir}              # Timestamp and log directory
                    # -- Download and URL definitions
                    DOWNLOAD_DIR ${TPL_DOWNLOAD_DIR}       
                    URL          ${XERCES_URL}                 # URL may be a web site OR a local file
                    URL_MD5      ${XERCES_MD5_SUM}             # md5sum of the archive file
                    # -- Configure
                    SOURCE_DIR   ${XERCES_source_dir}          # Source directory
                    CMAKE_ARGS   ${AMANZI_CMAKE_CACHE_ARGS}    # CMAKE_CACHE_ARGS or CMAKE_ARGS => CMake configure
                                 ${XERCES_CMAKE_ARGS}
                                 ${Amanzi_CMAKE_C_COMPILER_ARGS}  # Ensure uniform build
                                 -DCMAKE_C_COMPILER:FILEPATH=${CMAKE_C_COMPILER}
                                 ${Amanzi_CMAKE_CXX_COMPILER_ARGS}
                                 -DCMAKE_CXX_COMPILER:FILEPATH=${CMAKE_CXX_COMPILER}
                    # -- Build
                    BINARY_DIR       ${XERCES_build_dir}            # Build directory 
                    BUILD_COMMAND    $(MAKE)
                    BUILD_IN_SOURCE  FALSE                          # Flag for in source builds
                    # -- Install
                    INSTALL_DIR      ${TPL_INSTALL_PREFIX}          # Install directory
                    # -- Output control
                    ${XERCES_logging_args})

include(BuildLibraryName)

build_library_name(xerces-c XERCES_LIBRARY APPEND_PATH ${TPL_INSTALL_PREFIX}/lib)
set(XERCES_LIBRARIES ${XERCES_LIBRARY})
set(XERCES_INCLUDE_DIRS ${TPL_INSTALL_PREFIX}/include)
