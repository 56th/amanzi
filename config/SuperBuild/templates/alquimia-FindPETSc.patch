--- alquimia-dev-1.0.5/cmake/Modules/FindPETSc.cmake	2017-09-20 11:18:31.000000000 -0600
+++ alquimia-1.0.5-source/cmake/Modules/FindPETSc.cmake	2018-02-28 16:43:17.000000000 -0700
@@ -262,14 +262,14 @@
   return 0;
 }
 ")
+
     multipass_source_runs ("${includes}" "${libraries}" "${_PETSC_TEST_SOURCE}" ${runs} "${PETSC_LANGUAGE_BINDINGS}")
-    if (${${runs}})
+    if ( (${${runs}}) OR (DEFINED ENV{NERSC_HOST}) )
       set (PETSC_EXECUTABLE_RUNS "YES" CACHE BOOL
         "Can the system successfully run a PETSc executable?  This variable can be manually set to \"YES\" to force CMake to accept a given PETSc configuration, but this will almost always result in a broken build.  If you change PETSC_DIR, PETSC_ARCH, or PETSC_CURRENT you would have to reset this variable." FORCE)
-    endif (${${runs}})
+    endif ( (${${runs}}) OR (DEFINED ENV{NERSC_HOST}) )
   endmacro (PETSC_TEST_RUNS)
 
-
   find_path (PETSC_INCLUDE_DIR petscts.h HINTS "${PETSC_DIR}" PATH_SUFFIXES include NO_DEFAULT_PATH)
   find_path (PETSC_INCLUDE_CONF petscconf.h HINTS "${PETSC_DIR}" PATH_SUFFIXES "${PETSC_ARCH}/include" "bmake/${PETSC_ARCH}" NO_DEFAULT_PATH)
   mark_as_advanced (PETSC_INCLUDE_DIR PETSC_INCLUDE_CONF)
@@ -286,6 +286,9 @@
       set (petsc_includes_needed ${petsc_includes_all})
     else (petsc_works_allincludes) # We are going to need to link the external libs explicitly
       resolve_libraries (petsc_libraries_external "${petsc_libs_external}")
+      if (DEFINED ENV{NERSC_HOST} )
+        set (petsc_libraries_external ${petsc_libs_external})
+      endif( )
       foreach (pkg SYS VEC MAT DM KSP SNES TS ALL)
         list (APPEND PETSC_LIBRARIES_${pkg}  ${petsc_libraries_external})
       endforeach (pkg)
