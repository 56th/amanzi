diff -ruNbB crunchtope-160915.c31ecb9.0-source-orig/CMakeLists.txt crunchtope-160915.c31ecb9.0-source/CMakeLists.txt
--- crunchtope-160915.c31ecb9.0-source-orig/CMakeLists.txt	1969-12-31 17:00:00.000000000 -0700
+++ crunchtope-160915.c31ecb9.0-source/CMakeLists.txt	2017-08-16 17:50:22.601801936 -0600
@@ -0,0 +1,52 @@
+# Minimum CMake version.
+cmake_minimum_required (VERSION 2.8.12)
+set(CMAKE_BUILD_TYPE Release)
+
+project(CRUNCHTOPE)
+
+# Options for building CrunchTope. These come from the xSDK compliance rules.
+option(USE_XSDK_DEFAULTS "Set to use xSDK defaults for options [ON]." ON)
+option(CMAKE_INSTALL_PREFIX "Sets installation prefix [/usr/local].")
+option(XSDK_ENABLE_DEBUG "Enables Debug mode builds [OFF]." OFF)
+option(BUILD_SHARED_LIBS "Builds shared libraries [ON]." ON)
+
+# Make sure compilers are set. This must be done before enabling languages.
+if (NOT CMAKE_Fortran_COMPILER)
+  message(FATAL_ERROR "Fortran compiler is not set")
+endif()
+enable_language(Fortran)
+
+message(STATUS "C compiler is ${CMAKE_C_COMPILER} (${CMAKE_C_COMPILER_ID})")
+message(STATUS "Fortran compiler is ${CMAKE_Fortran_COMPILER} (${CMAKE_Fortran_COMPILER_ID})")
+
+# Include the binary directory in the header file search path,
+# since it's where we place generated files.
+include_directories("${PROJECT_SOURCE_DIR}")
+
+# Now that we have gathered all tech information, we create a library
+add_definitions(-DALQUIMIA)
+file(GLOB CRUNCH_SRC "*.F90")
+list(REMOVE_ITEM CRUNCH_SRC "${CRUNCHTOPE_SOURCE_DIR}/AllocateCSD.F90")
+list(REMOVE_ITEM CRUNCH_SRC "${CRUNCHTOPE_SOURCE_DIR}/CalculateCSD.F90")
+list(REMOVE_ITEM CRUNCH_SRC "${CRUNCHTOPE_SOURCE_DIR}/CountSubstrings.F90")
+list(REMOVE_ITEM CRUNCH_SRC "${CRUNCHTOPE_SOURCE_DIR}/equilib.F90")
+list(REMOVE_ITEM CRUNCH_SRC "${CRUNCHTOPE_SOURCE_DIR}/FindFirstStringWithinBlock.F90")
+list(REMOVE_ITEM CRUNCH_SRC "${CRUNCHTOPE_SOURCE_DIR}/GraphicsXmgr.F90")
+list(REMOVE_ITEM CRUNCH_SRC "${CRUNCHTOPE_SOURCE_DIR}/parameters.F90")
+list(REMOVE_ITEM CRUNCH_SRC "${CRUNCHTOPE_SOURCE_DIR}/RateFactorNumerical.F90")
+list(REMOVE_ITEM CRUNCH_SRC "${CRUNCHTOPE_SOURCE_DIR}/ReactionNumerical.F90")
+list(REMOVE_ITEM CRUNCH_SRC "${CRUNCHTOPE_SOURCE_DIR}/reactionNEW.F90")
+list(REMOVE_ITEM CRUNCH_SRC "${CRUNCHTOPE_SOURCE_DIR}/read_kinetics.F90")
+
+# install library and mod files
+set(CRUNCHTOPE_LIB "crunchchem")
+set(CMAKE_Fortran_MODULE_DIRECTORY "${PROJECT_BINARY_DIR}/mod_files")
+
+include_directories(${PETSC_DIR}/include)
+add_library(${CRUNCHTOPE_LIB} STATIC ${CRUNCH_SRC})
+
+install(TARGETS ${CRUNCHTOPE_LIB} DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
+install(DIRECTORY ${CMAKE_Fortran_MODULE_DIRECTORY}/ DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
+
+
+
diff -ruNbB crunchtope-160915.c31ecb9.0-source-orig/Makefile crunchtope-160915.c31ecb9.0-source/Makefile
--- crunchtope-160915.c31ecb9.0-source-orig/Makefile	2017-08-14 15:54:41.000000000 -0600
+++ crunchtope-160915.c31ecb9.0-source/Makefile	2017-08-16 12:40:36.752382404 -0600
@@ -625,11 +625,11 @@
 ## For PETSc 3.0X
 ##include ${PETSC_DIR}/conf/base
 ## For PETSc 3.2X
-##include ${PETSC_DIR}/conf/variables
-##include ${PETSC_DIR}/conf/rules
+include ${PETSC_DIR}/conf/variables
+include ${PETSC_DIR}/conf/rules
 ## For PETSc >3.6.0
-include ${PETSC_DIR}/lib/petsc/conf/variables
-include ${PETSC_DIR}/lib/petsc/conf/rules
+##include ${PETSC_DIR}/lib/petsc/conf/variables
+##include ${PETSC_DIR}/lib/petsc/conf/rules
 
 CrunchMain : ${OBJSF} chkopts
 	-${FLINKER} -o CrunchTope ${OBJSF} ${PETSC_FORTRAN_LIB} ${PETSC_LIB} ${FFLAGS}
