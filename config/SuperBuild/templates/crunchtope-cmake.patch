diff -ruNbB crunchtope_160915-c31ecb9/AssembleGlobal.F90 crunchtope-160915.c31ecb9.0-source/AssembleGlobal.F90
--- crunchtope_160915-c31ecb9/AssembleGlobal.F90	2017-08-14 15:54:41.000000000 -0600
+++ crunchtope-160915.c31ecb9.0-source/AssembleGlobal.F90	2017-09-01 15:46:39.332821948 -0600
@@ -56,13 +56,10 @@
 USE temperature
 USE ReadFlow
 
-IMPLICIT NONE
-
-!*****************************PETSc include statements ********************
+#include "petsc/finclude/petscdmda.h"
+USE petscdmda
 
-#include "petsc/finclude/petsc.h"
-
-!**************************** End PETSc include statements **************
+IMPLICIT NONE
 
 INTEGER(I4B), INTENT(IN)                      :: nx
 INTEGER(I4B), INTENT(IN)                      :: ny
diff -ruNbB crunchtope_160915-c31ecb9/CMakeLists.txt crunchtope-160915.c31ecb9.0-source/CMakeLists.txt
--- crunchtope_160915-c31ecb9/CMakeLists.txt	1969-12-31 17:00:00.000000000 -0700
+++ crunchtope-160915.c31ecb9.0-source/CMakeLists.txt	2017-09-01 11:31:58.831168408 -0600
@@ -0,0 +1,57 @@
+# Minimum CMake version.
+cmake_minimum_required (VERSION 2.8.12)
+set(CMAKE_BUILD_TYPE Release)
+
+project(CRUNCHTOPE)
+
+# Options for building CrunchTope. These come from the xSDK compliance rules.
+option(USE_XSDK_DEFAULTS "Set to use xSDK defaults for options [ON]." ON)
+option(CMAKE_INSTALL_PREFIX "Sets installation prefix [/usr/local].")
+option(XSDK_ENABLE_DEBUG "Enables Debug mode builds [OFF]." OFF)
+option(BUILD_SHARED_LIBS "Builds shared libraries [ON]." ON)
+
+# Make sure compilers are set. This must be done before enabling languages.
+if (NOT CMAKE_Fortran_COMPILER)
+  message(FATAL_ERROR "Fortran compiler is not set")
+endif()
+enable_language(Fortran)
+
+message(STATUS "C compiler is ${CMAKE_C_COMPILER} (${CMAKE_C_COMPILER_ID})")
+message(STATUS "Fortran compiler is ${CMAKE_Fortran_COMPILER} (${CMAKE_Fortran_COMPILER_ID})")
+
+# Include the binary directory in the header file search path,
+# since it's where we place generated files.
+include_directories("${PROJECT_SOURCE_DIR}")
+
+# Now that we have gathered all tech information, we create a library
+add_definitions(-DALQUIMIA)
+file(GLOB CRUNCH_SRC "*.F90")
+list(REMOVE_ITEM CRUNCH_SRC "${CRUNCHTOPE_SOURCE_DIR}/AllocateCSD.F90")
+list(REMOVE_ITEM CRUNCH_SRC "${CRUNCHTOPE_SOURCE_DIR}/CalculateCSD.F90")
+list(REMOVE_ITEM CRUNCH_SRC "${CRUNCHTOPE_SOURCE_DIR}/CountSubstrings.F90")
+list(REMOVE_ITEM CRUNCH_SRC "${CRUNCHTOPE_SOURCE_DIR}/equilib.F90")
+list(REMOVE_ITEM CRUNCH_SRC "${CRUNCHTOPE_SOURCE_DIR}/FindFirstStringWithinBlock.F90")
+list(REMOVE_ITEM CRUNCH_SRC "${CRUNCHTOPE_SOURCE_DIR}/GraphicsXmgr.F90")
+list(REMOVE_ITEM CRUNCH_SRC "${CRUNCHTOPE_SOURCE_DIR}/parameters.F90")
+list(REMOVE_ITEM CRUNCH_SRC "${CRUNCHTOPE_SOURCE_DIR}/RateFactorNumerical.F90")
+list(REMOVE_ITEM CRUNCH_SRC "${CRUNCHTOPE_SOURCE_DIR}/ReactionNumerical.F90")
+list(REMOVE_ITEM CRUNCH_SRC "${CRUNCHTOPE_SOURCE_DIR}/reactionNEW.F90")
+list(REMOVE_ITEM CRUNCH_SRC "${CRUNCHTOPE_SOURCE_DIR}/read_kinetics.F90")
+
+# install library and mod files
+set(CRUNCHTOPE_LIB "crunchchem")
+set(CMAKE_Fortran_MODULE_DIRECTORY "${PROJECT_BINARY_DIR}/mod_files")
+
+include_directories(${PETSC_DIR}/include)
+add_library(${CRUNCHTOPE_LIB} ${CRUNCH_SRC})
+if (APPLE AND BUILD_SHARED_LIBS)
+  set_target_properties(${CRUNCHTOPE_LIB} 
+                        PROPERTIES INSTALL_NAME_DIR ${CMAKE_INSTALL_PREFIX}/lib
+                                   LINK_FLAGS "-Wl,-undefined,dynamic_lookup")
+endif()
+
+install(TARGETS ${CRUNCHTOPE_LIB} DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
+install(DIRECTORY ${CMAKE_Fortran_MODULE_DIRECTORY}/ DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
+
+
+
diff -ruNbB crunchtope_160915-c31ecb9/CrunchPETScFinalizeSolver.F90 crunchtope-160915.c31ecb9.0-source/CrunchPETScFinalizeSolver.F90
--- crunchtope_160915-c31ecb9/CrunchPETScFinalizeSolver.F90	2017-08-14 15:54:41.000000000 -0600
+++ crunchtope-160915.c31ecb9.0-source/CrunchPETScFinalizeSolver.F90	2017-09-01 15:47:27.800655743 -0600
@@ -45,9 +45,12 @@
 subroutine CrunchPETScFinalizeSolver(xvec,bvec,amatpetsc,userC,ierr)
 USE crunchtype
 
-IMPLICIT NONE
+#include "petsc/finclude/petscksp.h"
+#include "petsc/finclude/petscdmda.h"
+USE petscksp
+USE petscdmda
 
-#include "petsc/finclude/petsc.h"
+IMPLICIT NONE
 
 !  External variables and arrays
 
@@ -63,8 +66,7 @@
 KSP                  ksp
 ! ************************end PETSc declarations of PETSc variables ******
 
-
-ksp = userC(6)
+ksp%v = userC(6)
 
 call VecDestroy(xvec,ierr)
 call VecDestroy(bvec,ierr)
diff -ruNbB crunchtope_160915-c31ecb9/CrunchPETScInitializeChemistry.F90 crunchtope-160915.c31ecb9.0-source/CrunchPETScInitializeChemistry.F90
--- crunchtope_160915-c31ecb9/CrunchPETScInitializeChemistry.F90	2017-08-14 15:54:41.000000000 -0600
+++ crunchtope-160915.c31ecb9.0-source/CrunchPETScInitializeChemistry.F90	2017-09-01 15:47:39.864279574 -0600
@@ -46,9 +46,12 @@
 USE crunchtype
 USE solver, ONLY:  xn,fxx
 
-IMPLICIT NONE
+#include "petsc/finclude/petscksp.h"
+#include "petsc/finclude/petscmat.h"
+USE petscksp
+USE petscmat
 
-#include "petsc/finclude/petsc.h"
+IMPLICIT NONE
 
 !  External variables and arrays
 
@@ -108,12 +111,12 @@
 call KSPGetPC(ksp,pc,ierr)
 
 
-userC(1) = amatpetsc
-userC(2) = bvec
-userC(3) = xvec
+userC(1) = amatpetsc%v
+userC(2) = bvec%v
+userC(3) = xvec%v
 !!userC(4) = sles
-userC(5) = pc
-userC(6) = ksp
+userC(5) = pc%v
+userC(6) = ksp%v
 
 RETURN
 END subroutine CrunchPETScInitializeChemistry
diff -ruNbB crunchtope_160915-c31ecb9/CrunchPETScInitializeDiffusion.F90 crunchtope-160915.c31ecb9.0-source/CrunchPETScInitializeDiffusion.F90
--- crunchtope_160915-c31ecb9/CrunchPETScInitializeDiffusion.F90	2017-08-14 15:54:41.000000000 -0600
+++ crunchtope-160915.c31ecb9.0-source/CrunchPETScInitializeDiffusion.F90	2017-09-01 15:47:49.151169874 -0600
@@ -47,10 +47,12 @@
 USE solver, ONLY:  XvecCrunchD, BvecCrunchD
 USE transport, ONLY:  aDD,bDD,cDD,dDD,eDD,fDD,gDD,hDD,iDD
 
-IMPLICIT NONE
-
-#include "petsc/finclude/petsc.h"
+#include "petsc/finclude/petscmat.h"
+#include "petsc/finclude/petscksp.h"
+USE petscmat
+USE petscksp
 
+IMPLICIT NONE
 
 !  External variables and arrays
 
@@ -105,12 +107,12 @@
 call KSPGetPC(ksp,pc,ierr)
 !!call SLESGetKSP(sles,ksp,ierr)
 
-userD(1) = amatD
-userD(2) = bvecD
-userD(3) = xvecD
+userD(1) = amatD%v
+userD(2) = bvecD%v
+userD(3) = xvecD%v
 !!userD(4) = sles
-userD(5) = pc
-userD(6) = ksp
+userD(5) = pc%v
+userD(6) = ksp%v
 
   IF (nx > 1 .AND. ny == 1 .AND. nz == 1) THEN            ! 1D case
     IF (ALLOCATED(aDD)) THEN
diff -ruNbB crunchtope_160915-c31ecb9/CrunchPETScInitializePressure.F90 crunchtope-160915.c31ecb9.0-source/CrunchPETScInitializePressure.F90
--- crunchtope_160915-c31ecb9/CrunchPETScInitializePressure.F90	2017-08-14 15:54:41.000000000 -0600
+++ crunchtope-160915.c31ecb9.0-source/CrunchPETScInitializePressure.F90	2017-09-01 15:48:19.461899770 -0600
@@ -45,9 +45,12 @@
 USE crunchtype
 USE flow, ONLY:  XvecCrunchP, BvecCrunchP
 
-IMPLICIT NONE
+#include "petsc/finclude/petscmat.h"
+#include "petsc/finclude/petscksp.h"
+USE petscmat
+USE petscksp
 
-#include "petsc/finclude/petsc.h"
+IMPLICIT NONE
 
 !  External variables and arrays
 
@@ -102,12 +105,12 @@
 call KSPGetPC(ksp,pc,ierr)
 !!call SLESGetKSP(sles,ksp,ierr)
 
-userP(1) = amatP
-userP(2) = bvecP
-userP(3) = xvecP
+userP(1) = amatP%v
+userP(2) = bvecP%v
+userP(3) = xvecP%v
 !!userP(4) = sles
-userP(5) = pc
-userP(6) = ksp
+userP(5) = pc%v
+userP(6) = ksp%v
 
 RETURN
 END subroutine CrunchPETScInitializePressure
diff -ruNbB crunchtope_160915-c31ecb9/CrunchPETScTolerances.F90 crunchtope-160915.c31ecb9.0-source/CrunchPETScTolerances.F90
--- crunchtope_160915-c31ecb9/CrunchPETScTolerances.F90	2017-08-14 15:54:41.000000000 -0600
+++ crunchtope-160915.c31ecb9.0-source/CrunchPETScTolerances.F90	2017-09-01 15:48:29.872150454 -0600
@@ -45,9 +45,11 @@
 subroutine CrunchPETScTolerances(user,rtolksp,atolksp,dtolksp,maxitsksp,ierr)
 USE crunchtype
 USE solver, ONLY:  level, SolverMethod, PCMethod
-IMPLICIT NONE
 
-#include "petsc/finclude/petsc.h"
+#include "petsc/finclude/petscksp.h"
+USE petscksp
+
+IMPLICIT NONE
 
 !  External variables and arrays
 REAL(DP), INTENT(IN)                                                  :: rtolksp
@@ -67,8 +69,8 @@
 ! ************************end PETSc declarations of PETSc variables ******
 
 !!sles = user(4)
-pc = user(5)
-ksp = user(6)
+pc%v = user(5)
+ksp%v = user(6)
  
 ! Tolerances for linear solver set here
 
diff -ruNbB crunchtope_160915-c31ecb9/CrunchTope.F90 crunchtope-160915.c31ecb9.0-source/CrunchTope.F90
--- crunchtope_160915-c31ecb9/CrunchTope.F90	2017-08-14 15:54:41.000000000 -0600
+++ crunchtope-160915.c31ecb9.0-source/CrunchTope.F90	2017-09-01 15:48:43.152470251 -0600
@@ -60,6 +60,11 @@
 USE CrunchFunctions
 !!USE fparser
 
+#include "petsc/finclude/petscmat.h"
+#include "petsc/finclude/petscksp.h"
+USE petscmat
+USE petscksp
+
 IMPLICIT NONE
 
 INTERFACE
@@ -79,12 +84,6 @@
 INTEGER(I4B), INTENT(IN OUT)                                      :: NumInputFiles
 INTEGER(I4B), INTENT(IN OUT)                                      :: InputFileCounter
 
-!  **********  PETSc include statements *********************************
-
-#include "petsc/finclude/petsc.h"
-
-! ******************* end PETSc include statements ***********************
-
 EXTERNAL AssembleGlobal
 EXTERNAL SolveDiffuse
 EXTERNAL dgetrf
@@ -646,8 +645,8 @@
   rtolksp = 1.0D-17
   dtolksp = 1.D+05
 
-  pc = userP(5)
-  ksp = userP(6)
+  pc%v = userP(5)
+  ksp%v = userP(6)
 
   CALL KSPSetOperators(ksp,amatP,amatP,ierr)
   CALL pressure(nx,ny,nz,dtflow,amatP,SteadyFlow)
@@ -989,8 +988,8 @@
     rtolksp = 1.0D-15
     dtolksp = 1.D+05
 
-    pc = userP(5)
-    ksp = userP(6)
+    pc%v = userP(5)
+    ksp%v = userP(6)
 
     SteadyFlow = .FALSE.
     CALL KSPSetOperators(ksp,amatP,amatP,ierr)
@@ -1508,8 +1507,8 @@
           CALL CrunchPETScTolerances(userD,rtolksp,atolksp,dtolksp,maxitsksp,ierr)
 
 !!          sles = userD(4)
-          pc = userD(5)
-          ksp = userD(6)
+          pc%v = userD(5)
+          ksp%v = userD(6)
 
           IF (spherical) THEN
             CALL SolveDiffuseSpherical(nx,ny,nz,nn,i,delt,userD,amatD)
@@ -1589,8 +1588,8 @@
       CALL CrunchPETScTolerances(userD,rtolksp,atolksp,dtolksp,maxitsksp,ierr)
 
 !!      sles = userD(4)
-      pc = userD(5)
-      ksp = userD(6)
+      pc%v = userD(5)
+      ksp%v = userD(6)
 
       DO i = 1,ncomp
 
@@ -2010,8 +2009,8 @@
 !!            rtolksp = 1.D-09
             rtolksp = GimrtRTOLKSP
             dtolksp = 1.D+05
-            pc = userC(5)
-            ksp = userC(6)
+            pc%v = userC(5)
+            ksp%v = userC(6)
 
             call KSPSetOperators(ksp,amatpetsc,amatpetsc,ierr)
             CALL GIMRTCrunchPETScTolerances(userC,rtolksp,atolksp,dtolksp,maxitsksp,ierr)
diff -ruNbB crunchtope_160915-c31ecb9/GIMRTCrunchPETScTolerances.F90 crunchtope-160915.c31ecb9.0-source/GIMRTCrunchPETScTolerances.F90
--- crunchtope_160915-c31ecb9/GIMRTCrunchPETScTolerances.F90	2017-08-14 15:54:41.000000000 -0600
+++ crunchtope-160915.c31ecb9.0-source/GIMRTCrunchPETScTolerances.F90	2017-09-01 15:46:04.601985612 -0600
@@ -45,9 +45,11 @@
 subroutine GIMRTCrunchPETScTolerances(user,rtolksp,atolksp,dtolksp,maxitsksp,ierr)
 USE crunchtype
 USE solver, ONLY:  GIMRTlevel, GIMRT_SolverMethod, GIMRT_PCMethod
-IMPLICIT NONE
 
-#include "petsc/finclude/petsc.h"
+#include "petsc/finclude/petscksp.h"
+USE petscksp
+
+IMPLICIT NONE
 
 !  External variables and arrays
 REAL(DP), INTENT(IN)                                                  :: rtolksp
@@ -67,8 +69,8 @@
 ! ************************end PETSc declarations of PETSc variables ******
 
 !!sles = user(4)
-pc = user(5)
-ksp = user(6)
+pc%v = user(5)
+ksp%v = user(6)
  
 ! Tolerances for linear solver set here
 
diff -ruNbB crunchtope_160915-c31ecb9/Makefile crunchtope-160915.c31ecb9.0-source/Makefile
--- crunchtope_160915-c31ecb9/Makefile	2017-08-14 15:54:41.000000000 -0600
+++ crunchtope-160915.c31ecb9.0-source/Makefile	2017-09-01 11:31:58.831168408 -0600
@@ -625,11 +625,11 @@
 ## For PETSc 3.0X
 ##include ${PETSC_DIR}/conf/base
 ## For PETSc 3.2X
-##include ${PETSC_DIR}/conf/variables
-##include ${PETSC_DIR}/conf/rules
+include ${PETSC_DIR}/conf/variables
+include ${PETSC_DIR}/conf/rules
 ## For PETSc >3.6.0
-include ${PETSC_DIR}/lib/petsc/conf/variables
-include ${PETSC_DIR}/lib/petsc/conf/rules
+##include ${PETSC_DIR}/lib/petsc/conf/variables
+##include ${PETSC_DIR}/lib/petsc/conf/rules
 
 CrunchMain : ${OBJSF} chkopts
 	-${FLINKER} -o CrunchTope ${OBJSF} ${PETSC_FORTRAN_LIB} ${PETSC_LIB} ${FFLAGS}
diff -ruNbB crunchtope_160915-c31ecb9/Pressure.F90 crunchtope-160915.c31ecb9.0-source/Pressure.F90
--- crunchtope_160915-c31ecb9/Pressure.F90	2017-08-14 15:54:41.000000000 -0600
+++ crunchtope-160915.c31ecb9.0-source/Pressure.F90	2017-09-01 15:49:44.960625287 -0600
@@ -52,13 +52,10 @@
 USE flow
 USE CrunchFunctions
 
-IMPLICIT NONE
-
-!*****************************PETSc include statements ********************
+#include "petsc/finclude/petscmat.h"
+USE petscmat
 
-#include "petsc/finclude/petsc.h"
-
-!**************************** End PETSc include statements **************
+IMPLICIT NONE
 
 INTEGER(I4B), INTENT(IN)                                       :: nx
 INTEGER(I4B), INTENT(IN)                                       :: ny
diff -ruNbB crunchtope_160915-c31ecb9/ReadFlowField.F90 crunchtope-160915.c31ecb9.0-source/ReadFlowField.F90
--- crunchtope_160915-c31ecb9/ReadFlowField.F90	2017-08-14 15:54:41.000000000 -0600
+++ crunchtope-160915.c31ecb9.0-source/ReadFlowField.F90	2017-09-01 15:50:39.115262690 -0600
@@ -55,6 +55,9 @@
 USE temperature
 USE ReadFlow
 
+#include "petsc/finclude/petscmat.h"
+USE petscmat
+
 IMPLICIT NONE
 
 !!  External variables and arrays
@@ -63,12 +66,6 @@
 INTEGER(I4B), INTENT(IN)                               :: ny
 INTEGER(I4B), INTENT(IN)                               :: nz
 
-!  **********  PETSc include statements *********************************
-
-#include "petsc/finclude/petsc.h"
-
-! ******************* end PETSc include statements ***********************
-
 !!  Internal variables and arrays
 
 LOGICAL(LGT)                                               :: ext
diff -ruNbB crunchtope_160915-c31ecb9/restart.F90 crunchtope-160915.c31ecb9.0-source/restart.F90
--- crunchtope_160915-c31ecb9/restart.F90	2017-08-14 15:54:41.000000000 -0600
+++ crunchtope-160915.c31ecb9.0-source/restart.F90	2017-09-01 16:01:49.404736916 -0600
@@ -60,6 +60,9 @@
 USE io
 USE modflowModule
 
+#include "petsc/finclude/petscmat.h"
+USE petscmat
+
 IMPLICIT NONE
 
 REAL(DP), INTENT(OUT)                         :: time
@@ -79,12 +82,6 @@
 REAL(DP), INTENT(INOUT)                       :: dtmaxcour
 REAL(DP), INTENT(INOUT)                       :: dtmax
 
-!  **********  PETSc include statements *********************************
-
-#include "petsc/finclude/petsc.h"
-
-! ******************* end PETSc include statements ***********************
-
 INTEGER(I4B)                                :: ierr
 INTEGER(I4B)                                :: iures
 INTEGER(I4B)                                :: ls
diff -ruNbB crunchtope_160915-c31ecb9/SolveDiffuse.F90 crunchtope-160915.c31ecb9.0-source/SolveDiffuse.F90
--- crunchtope_160915-c31ecb9/SolveDiffuse.F90	2017-08-14 15:54:41.000000000 -0600
+++ crunchtope-160915.c31ecb9.0-source/SolveDiffuse.F90	2017-09-01 15:56:18.086758620 -0600
@@ -52,13 +52,10 @@
 USE transport
 USE temperature
 
-IMPLICIT NONE
-
-!*****************************PETSc include statements ********************
-
-#include "petsc/finclude/petsc.h"
+#include "petsc/finclude/petscmat.h"
+USE petscmat
 
-!**************************** End PETSc include statements **************
+IMPLICIT NONE
 
 !  External variables and arrays
 
@@ -170,14 +167,14 @@
       jx = 1
       j = (jz-1)*nx*ny + (jy-1)*nx + jx - 1 
       IF (activecell(jx,jy,jz) == 0) THEN
-        CALL MatSetValues(amatD,1,j,1,j+1,0.0,INSERT_VALUES,ierr)
+        CALL MatSetValues(amatD,1,j,1,j+1,0.0d0,INSERT_VALUES,ierr)
       ELSE
         CALL MatSetValues(amatD,1,j,1,j+1,cDD(jx,jy,jz),INSERT_VALUES,ierr)
       END IF
       jx = nx
       j = (jz-1)*nx*ny + (jy-1)*nx + jx - 1 
       IF (activecell(jx,jy,jz) == 0) THEN
-        CALL MatSetValues(amatD,1,j,1,j-1,0.0,INSERT_VALUES,ierr)
+        CALL MatSetValues(amatD,1,j,1,j-1,0.0d0,INSERT_VALUES,ierr)
       ELSE
         CALL MatSetValues(amatD,1,j,1,j-1,aDD(jx,jy,jz),INSERT_VALUES,ierr)
       END IF
diff -ruNbB crunchtope_160915-c31ecb9/SolveDiffuseSpherical.F90 crunchtope-160915.c31ecb9.0-source/SolveDiffuseSpherical.F90
--- crunchtope_160915-c31ecb9/SolveDiffuseSpherical.F90	2017-08-14 15:54:41.000000000 -0600
+++ crunchtope-160915.c31ecb9.0-source/SolveDiffuseSpherical.F90	2017-09-01 15:57:46.052210203 -0600
@@ -51,13 +51,10 @@
 USE transport
 USE temperature
 
-IMPLICIT NONE
-
-!*****************************PETSc include statements ********************
+#include "petsc/finclude/petscmat.h"
+USE petscmat
 
-#include "petsc/finclude/petsc.h"
-
-!**************************** End PETSc include statements **************
+IMPLICIT NONE
 
 !  External variables and arrays
 
@@ -116,8 +113,8 @@
     IF (activecell(jx,jy,jz) == 0) THEN
       DiagonalTerm = 1.0
       CALL MatSetValues(amatD,1,j,1,j,DiagonalTerm,INSERT_VALUES,ierr)  
-      CALL MatSetValues(amatD,1,j,1,j-1,0.0,INSERT_VALUES,ierr)
-      CALL MatSetValues(amatD,1,j,1,j+1,0.0,INSERT_VALUES,ierr)
+      CALL MatSetValues(amatD,1,j,1,j-1,0.0d0,INSERT_VALUES,ierr)
+      CALL MatSetValues(amatD,1,j,1,j+1,0.0d0,INSERT_VALUES,ierr)
     ELSE    
       AccumulationTerm = ro(jx,jy,jz)*por(jx,jy,jz)*satliq(jx,jy,jz)/delt
       DiagonalTerm = b(jx,jy,jz) + dxy(jx,jy,jz)*AccumulationTerm
@@ -132,7 +129,7 @@
   IF (activecell(jx,jy,jz) == 0) THEN
     DiagonalTerm = 1.0
     CALL MatSetValues(amatD,1,j,1,j,DiagonalTerm,INSERT_VALUES,ierr)  
-    CALL MatSetValues(amatD,1,j,1,j+1,0.0,INSERT_VALUES,ierr)
+    CALL MatSetValues(amatD,1,j,1,j+1,0.0d0,INSERT_VALUES,ierr)
   ELSE 
     AccumulationTerm = ro(jx,jy,jz)*por(jx,jy,jz)*satliq(jx,jy,jz)/delt
     DiagonalTerm = b(jx,jy,jz) + dxy(jx,jy,jz)*AccumulationTerm
@@ -145,7 +142,7 @@
   IF (activecell(jx,jy,jz) == 0) THEN
     DiagonalTerm = 1.0
     CALL MatSetValues(amatD,1,j,1,j,DiagonalTerm,INSERT_VALUES,ierr)  
-    CALL MatSetValues(amatD,1,j,1,j-1,0.0,INSERT_VALUES,ierr)
+    CALL MatSetValues(amatD,1,j,1,j-1,0.0d0,INSERT_VALUES,ierr)
   ELSE
     AccumulationTerm = ro(jx,jy,jz)*por(jx,jy,jz)*satliq(jx,jy,jz)/delt
     DiagonalTerm = b(jx,jy,jz) + dxy(jx,jy,jz)*AccumulationTerm
diff -ruNbB crunchtope_160915-c31ecb9/SolveGasDiffuse.F90 crunchtope-160915.c31ecb9.0-source/SolveGasDiffuse.F90
--- crunchtope_160915-c31ecb9/SolveGasDiffuse.F90	2017-08-14 15:54:41.000000000 -0600
+++ crunchtope-160915.c31ecb9.0-source/SolveGasDiffuse.F90	2017-09-01 15:59:44.121720040 -0600
@@ -52,13 +52,10 @@
 USE transport
 USE temperature
 
-IMPLICIT NONE
-
-!*****************************PETSc include statements ********************
+#include "petsc/finclude/petscmat.h"
+USE petscmat
 
-#include "petsc/finclude/petsc.h"
-
-!**************************** End PETSc include statements **************
+IMPLICIT NONE
 
 !  External variables and arrays
 
@@ -120,8 +117,8 @@
     IF (activecell(jx,jy,jz) == 0) THEN
       DiagonalTerm = 1.0
       CALL MatSetValues(amatD,1,j,1,j,DiagonalTerm,INSERT_VALUES,ierr)  
-      CALL MatSetValues(amatD,1,j,1,j-1,0.0,INSERT_VALUES,ierr)
-      CALL MatSetValues(amatD,1,j,1,j+1,0.0,INSERT_VALUES,ierr)
+      CALL MatSetValues(amatD,1,j,1,j-1,0.0d0,INSERT_VALUES,ierr)
+      CALL MatSetValues(amatD,1,j,1,j+1,0.0d0,INSERT_VALUES,ierr)
     ELSE
       AccumulationTerm = dxy(jx,jy,jz)*portemp*satgas/delt
       DiagonalTerm = bg(jx,jy,jz) + AccumulationTerm
@@ -138,7 +135,7 @@
   IF (activecell(jx,jy,jz) == 0) THEN
     DiagonalTerm = 1.0
     CALL MatSetValues(amatD,1,j,1,j,DiagonalTerm,INSERT_VALUES,ierr)  
-    CALL MatSetValues(amatD,1,j,1,j+1,0.0,INSERT_VALUES,ierr)
+    CALL MatSetValues(amatD,1,j,1,j+1,0.0d0,INSERT_VALUES,ierr)
   ELSE
     AccumulationTerm = dxy(jx,jy,jz)*portemp*satgas/delt
     DiagonalTerm = bg(jx,jy,jz) + AccumulationTerm
@@ -153,7 +150,7 @@
   IF (activecell(jx,jy,jz) == 0) THEN
     DiagonalTerm = 1.0
     CALL MatSetValues(amatD,1,j,1,j,DiagonalTerm,INSERT_VALUES,ierr)  
-    CALL MatSetValues(amatD,1,j,1,j-1,0.0,INSERT_VALUES,ierr)
+    CALL MatSetValues(amatD,1,j,1,j-1,0.0d0,INSERT_VALUES,ierr)
   ELSE
     AccumulationTerm = dxy(jx,jy,jz)*portemp*satgas/delt
     DiagonalTerm = bg(jx,jy,jz) + AccumulationTerm
@@ -168,8 +165,8 @@
       DO jx = 2,nx-1
         j = (jz-1)*nx*ny + (jy-1)*nx + jx - 1 
         IF (activecell(jx,jy,jz) == 0) THEN
-          CALL MatSetValues(amatD,1,j,1,j-1,0.0,INSERT_VALUES,ierr)
-          CALL MatSetValues(amatD,1,j,1,j+1,0.0,INSERT_VALUES,ierr)
+          CALL MatSetValues(amatD,1,j,1,j-1,0.0d0,INSERT_VALUES,ierr)
+          CALL MatSetValues(amatD,1,j,1,j+1,0.0d0,INSERT_VALUES,ierr)
         ELSE
           CALL MatSetValues(amatD,1,j,1,j-1,ag(jx,jy,jz),INSERT_VALUES,ierr)
           CALL MatSetValues(amatD,1,j,1,j+1,cg(jx,jy,jz),INSERT_VALUES,ierr)
@@ -178,14 +175,14 @@
       jx = 1
       j = (jz-1)*nx*ny + (jy-1)*nx + jx - 1 
       IF (activecell(jx,jy,jz) == 0) THEN
-        CALL MatSetValues(amatD,1,j,1,j+1,0.0,INSERT_VALUES,ierr)
+        CALL MatSetValues(amatD,1,j,1,j+1,0.0d0,INSERT_VALUES,ierr)
       ELSE
         CALL MatSetValues(amatD,1,j,1,j+1,cg(jx,jy,jz),INSERT_VALUES,ierr)
       END IF
       jx = nx
       j = (jz-1)*nx*ny + (jy-1)*nx + jx - 1 
       IF (activecell(jx,jy,jz) == 0) THEN
-        CALL MatSetValues(amatD,1,j,1,j-1,0.0,INSERT_VALUES,ierr)
+        CALL MatSetValues(amatD,1,j,1,j-1,0.0d0,INSERT_VALUES,ierr)
       ELSE
         CALL MatSetValues(amatD,1,j,1,j-1,ag(jx,jy,jz),INSERT_VALUES,ierr)
       END IF
@@ -196,8 +193,8 @@
       DO jy = 2,ny-1
         j = (jz-1)*nx*ny + (jy-1)*nx + jx - 1 
         IF (activecell(jx,jy,jz) == 0) THEN
-          CALL MatSetValues(amatD,1,j,1,j-nx,0.0,INSERT_VALUES,ierr)
-          CALL MatSetValues(amatD,1,j,1,j+nx,0.0,INSERT_VALUES,ierr)
+          CALL MatSetValues(amatD,1,j,1,j-nx,0.0d0,INSERT_VALUES,ierr)
+          CALL MatSetValues(amatD,1,j,1,j+nx,0.0d0,INSERT_VALUES,ierr)
         ELSE
           CALL MatSetValues(amatD,1,j,1,j-nx,fg(jx,jy,jz),INSERT_VALUES,ierr)
           CALL MatSetValues(amatD,1,j,1,j+nx,dg(jx,jy,jz),INSERT_VALUES,ierr)
@@ -206,14 +203,14 @@
       jy = 1
       j = (jz-1)*nx*ny + (jy-1)*nx + jx - 1 
       IF (activecell(jx,jy,jz) == 0) THEN
-        CALL MatSetValues(amatD,1,j,1,j+nx,0.0,INSERT_VALUES,ierr)
+        CALL MatSetValues(amatD,1,j,1,j+nx,0.0d0,INSERT_VALUES,ierr)
       ELSE
         CALL MatSetValues(amatD,1,j,1,j+nx,dg(jx,jy,jz),INSERT_VALUES,ierr)
       END IF
       jy = ny
       j = (jz-1)*nx*ny + (jy-1)*nx + jx - 1 
       IF (activecell(jx,jy,jz) == 0) THEN
-        CALL MatSetValues(amatD,1,j,1,j-nx,0.0,INSERT_VALUES,ierr)
+        CALL MatSetValues(amatD,1,j,1,j-nx,0.0d0,INSERT_VALUES,ierr)
       ELSE
         CALL MatSetValues(amatD,1,j,1,j-nx,fg(jx,jy,jz),INSERT_VALUES,ierr)
       END IF
